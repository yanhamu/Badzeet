@model Badzeet.Web.Features.Budget.BudgetViewModel
@{
    ViewData["Title"] = "Budget";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h2>
        @if (Model.BudgetId > 0)
        {
        <span>
            <a asp-action="Index" asp-route-budgetId="@(Model.BudgetId-1)">
                <i class="fas fa-angle-left"></i>
            </a>
        </span>
        }
        @Model.BudgetInterval.From.ToString("dd MMM") - @Model.BudgetInterval.To.ToString("dd MMM")

        <span>
            <a asp-action="Index" asp-route-budgetId="@(Model.BudgetId + 1)">
                <i class="fas fa-angle-right"></i>
            </a>
        </span>
    </h2>
</div>

<div class="card mb-4">
    <h5 class="card-header bg-primary text-white">
        Summary
    </h5>
    <div class="card-body">
        <table class="table table-sm">
            <tr>
                <td>
                    Spend:
                </td>
                <td>
                    @Model.Spend.ToString("F0") (@((Model.Spend / Model.Budget).ToString("P0")))
                </td>
            </tr>
            <tr>
                <td>
                    Budget:
                </td>
                <td>
                    @Model.Budget.ToString("F0")
                </td>
            </tr>
            <tr>
                <td>
                    Remaining budget:
                </td>
                <td class="@(Model.RemainingBudget > 0?"text-success":"text-danger") ">
                    @Model.RemainingBudget.ToString("F0") (@((Model.RemainingBudget / Model.Budget).ToString("P0")))
                </td>
            </tr>
            @if (Model.IsOngoing)
            {
            <tr>
                <td>
                    Remaining days:
                </td>
                <td>
                    @{
                            var remaining = (Model.BudgetInterval.To - DateTime.Now).TotalDays;
                            var total = (int)(Model.BudgetInterval.To - Model.BudgetInterval.From).TotalDays + 2;
                    }

                    @((int)remaining + 2) (@((remaining / total).ToString("P0")))
                </td>
            </tr>
            @if (remaining != 0)
                {
            <tr>
                <td>Remaining daily average</td>
                <td>@(((double)Model.RemainingBudget / (remaining + 2)).ToString("F0"))</td>
            </tr>
                }
            }
        </table>
        <table class="table table-sm">
            <tr><th colspan="2">Total spend per user</th></tr>
            @foreach (var u in Model.Totals)
                {
            <tr>
                <td>@u.Username</td>
                <td>@u.Total.ToString("F0")</td>
            </tr>
                }
        </table>
    </div>
</div>

<div class="card mb-4">
    <h5 class="card-header bg-primary text-white">
        Budget
    </h5>
    <div class="card-body">
        <table class="table table-sm">
            <tr>
                <th colspan="2"></th>

                <th>Spent</th>
                <th>Planned</th>
            </tr>
            @foreach (var category in Model.Categories)
            {
            <tr data-toggle="collapse" data-target="#@category.Name">
                <th colspan="2">
                    @category.Name
                </th>
                <th>@category.Total.ToString("F0")</th>
                <th>@category.Budget.ToString("F0")</th>
            </tr>

            @foreach (var u in category.Users)
                {
            <tr id="@category.Name" class="collapse">
                <td></td>
                <td>
                    @u.Name
                </td>
                <td>
                    @u.Total.ToString("F0")
                </td>
                <td>
                </td>
            </tr>
                }
            }
        </table>
        <a class="btn btn-primary form-control" asp-action="Edit">Edit</a>
    </div>
</div>